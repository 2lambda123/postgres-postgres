
env:
  CIRRUS_CLONE_DEPTH: 500

  # Source of images / containers
  GCP_PROJECT: pg-ci-images
  IMAGE_PROJECT: $GCP_PROJECT
  CONTAINER_REPO: us-docker.pkg.dev/${GCP_PROJECT}/ci

  # The commit that this branch is rebased on.  There's no easy way to find this.
  # This does the right thing for cfbot, which always squishes all patches into a single commit.
  # And does the right thing for any 1-patch commits.
  # Patch series manually submitted to cirrus would benefit from setting this to the
  # number of patches in the series (or directly to the commit the series was rebased on).
  BASE_COMMIT: HEAD~2


###
# Verify docs can be built, and (only on cfbot) upload changed docs as artifacts
###

task:
  name: Documentation

  env:
    CPUS: 1
    BUILD_JOBS: 1

  only_if: $CIRRUS_CHANGE_MESSAGE !=~ '.*\nci-os-only:.*' || $CIRRUS_CHANGE_MESSAGE =~ '.*\nci-os-only:[^\n]*(docs|html).*'
  skip: "!changesInclude('doc/**', 'src/tools/ci/copy-changed-docs')"

  container:
    #image: debian:bookworm
    image: $CONTAINER_REPO/linux_debian_bullseye_ci:latest
    cpu: $CPUS
    memory: 2G

  #install_additional_packages_script:
    #- apt-get update
    #- apt-get -qy install build-essential make git xsltproc

  sysinfo_script: |
    id
    uname -a
    cat /proc/cmdline
    ulimit -a -H && ulimit -a -S
    export
    git diff --name-only "$BASE_COMMIT"

  # Exercise HTML and other docs:
  docs_build_script: |
    time ./configure --without-readline --without-zlib
    make -s -j${BUILD_JOBS} -C doc
    cp -r doc new-docs

    # Build HTML docs from the base commit.
    git checkout "$BASE_COMMIT" -- doc
    #html-stamp
    make -s -C doc clean
    make -s -C doc html
    cp -r doc old-docs

  copy_changed_docs_script: |
    src/tools/ci/copy-changed-docs "old-docs" "new-docs" "html_docs"

  html_docs_artifacts:
    paths: ['html_docs/*.html', 'html_docs/*.png', 'html_docs/*.css']
